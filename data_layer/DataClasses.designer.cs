#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace data_layer
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="hospital_management_system")]
	public partial class DataClassesDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insertbill_item(bill_item instance);
    partial void Updatebill_item(bill_item instance);
    partial void Deletebill_item(bill_item instance);
    partial void Insertbill_master(bill_master instance);
    partial void Updatebill_master(bill_master instance);
    partial void Deletebill_master(bill_master instance);
    partial void Insertcase_master(case_master instance);
    partial void Updatecase_master(case_master instance);
    partial void Deletecase_master(case_master instance);
    partial void Insertdoctor(doctor instance);
    partial void Updatedoctor(doctor instance);
    partial void Deletedoctor(doctor instance);
    partial void Insertitem(item instance);
    partial void Updateitem(item instance);
    partial void Deleteitem(item instance);
    partial void Insertdoctor_case(doctor_case instance);
    partial void Updatedoctor_case(doctor_case instance);
    partial void Deletedoctor_case(doctor_case instance);
    partial void Insertroom_master(room_master instance);
    partial void Updateroom_master(room_master instance);
    partial void Deleteroom_master(room_master instance);
    partial void InsertPresentBalance(PresentBalance instance);
    partial void UpdatePresentBalance(PresentBalance instance);
    partial void DeletePresentBalance(PresentBalance instance);
    partial void Insertcost(cost instance);
    partial void Updatecost(cost instance);
    partial void Deletecost(cost instance);
    partial void Insertpatient(patient instance);
    partial void Updatepatient(patient instance);
    partial void Deletepatient(patient instance);
    partial void Insertcheque(cheque instance);
    partial void Updatecheque(cheque instance);
    partial void Deletecheque(cheque instance);
    #endregion
		
		
		public DataClassesDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<bill_item> bill_items
		{
			get
			{
				return this.GetTable<bill_item>();
			}
		}
		
		public System.Data.Linq.Table<bill_master> bill_masters
		{
			get
			{
				return this.GetTable<bill_master>();
			}
		}
		
		public System.Data.Linq.Table<case_master> case_masters
		{
			get
			{
				return this.GetTable<case_master>();
			}
		}
		
		public System.Data.Linq.Table<doctor> doctors
		{
			get
			{
				return this.GetTable<doctor>();
			}
		}
		
		public System.Data.Linq.Table<item> items
		{
			get
			{
				return this.GetTable<item>();
			}
		}
		
		public System.Data.Linq.Table<doctor_case> doctor_cases
		{
			get
			{
				return this.GetTable<doctor_case>();
			}
		}
		
		public System.Data.Linq.Table<room_master> room_masters
		{
			get
			{
				return this.GetTable<room_master>();
			}
		}
		
		public System.Data.Linq.Table<PresentBalance> PresentBalances
		{
			get
			{
				return this.GetTable<PresentBalance>();
			}
		}
		
		public System.Data.Linq.Table<cost> costs
		{
			get
			{
				return this.GetTable<cost>();
			}
		}
		
		public System.Data.Linq.Table<patient> patients
		{
			get
			{
				return this.GetTable<patient>();
			}
		}
		
		public System.Data.Linq.Table<cheque> cheques
		{
			get
			{
				return this.GetTable<cheque>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.bill_item")]
	public partial class bill_item : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _billid;
		
		private int _itemid;
		
		private int _qty;
		
		private EntityRef<item> _item;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnbillidChanging(int value);
    partial void OnbillidChanged();
    partial void OnitemidChanging(int value);
    partial void OnitemidChanged();
    partial void OnqtyChanging(int value);
    partial void OnqtyChanged();
    #endregion
		
		public bill_item()
		{
			this._item = default(EntityRef<item>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_billid", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int billid
		{
			get
			{
				return this._billid;
			}
			set
			{
				if ((this._billid != value))
				{
					this.OnbillidChanging(value);
					this.SendPropertyChanging();
					this._billid = value;
					this.SendPropertyChanged("billid");
					this.OnbillidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_itemid", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int itemid
		{
			get
			{
				return this._itemid;
			}
			set
			{
				if ((this._itemid != value))
				{
					if (this._item.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnitemidChanging(value);
					this.SendPropertyChanging();
					this._itemid = value;
					this.SendPropertyChanged("itemid");
					this.OnitemidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_qty", DbType="Int NOT NULL")]
		public int qty
		{
			get
			{
				return this._qty;
			}
			set
			{
				if ((this._qty != value))
				{
					this.OnqtyChanging(value);
					this.SendPropertyChanging();
					this._qty = value;
					this.SendPropertyChanged("qty");
					this.OnqtyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="item_bill_item", Storage="_item", ThisKey="itemid", OtherKey="itemid", IsForeignKey=true)]
		public item item
		{
			get
			{
				return this._item.Entity;
			}
			set
			{
				item previousValue = this._item.Entity;
				if (((previousValue != value) 
							|| (this._item.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._item.Entity = null;
						previousValue.bill_items.Remove(this);
					}
					this._item.Entity = value;
					if ((value != null))
					{
						value.bill_items.Add(this);
						this._itemid = value.itemid;
					}
					else
					{
						this._itemid = default(int);
					}
					this.SendPropertyChanged("item");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.bill_master")]
	public partial class bill_master : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _billid;
		
		private int _caseid;
		
		private System.DateTime _date;
		
		private string _paid;
		
		private long _total;
		
		private EntityRef<case_master> _case_master;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnbillidChanging(int value);
    partial void OnbillidChanged();
    partial void OncaseidChanging(int value);
    partial void OncaseidChanged();
    partial void OndateChanging(System.DateTime value);
    partial void OndateChanged();
    partial void OnpaidChanging(string value);
    partial void OnpaidChanged();
    partial void OntotalChanging(long value);
    partial void OntotalChanged();
    #endregion
		
		public bill_master()
		{
			this._case_master = default(EntityRef<case_master>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_billid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int billid
		{
			get
			{
				return this._billid;
			}
			set
			{
				if ((this._billid != value))
				{
					this.OnbillidChanging(value);
					this.SendPropertyChanging();
					this._billid = value;
					this.SendPropertyChanged("billid");
					this.OnbillidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_caseid", DbType="Int NOT NULL")]
		public int caseid
		{
			get
			{
				return this._caseid;
			}
			set
			{
				if ((this._caseid != value))
				{
					if (this._case_master.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncaseidChanging(value);
					this.SendPropertyChanging();
					this._caseid = value;
					this.SendPropertyChanged("caseid");
					this.OncaseidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date", DbType="Date NOT NULL")]
		public System.DateTime date
		{
			get
			{
				return this._date;
			}
			set
			{
				if ((this._date != value))
				{
					this.OndateChanging(value);
					this.SendPropertyChanging();
					this._date = value;
					this.SendPropertyChanged("date");
					this.OndateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_paid", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string paid
		{
			get
			{
				return this._paid;
			}
			set
			{
				if ((this._paid != value))
				{
					this.OnpaidChanging(value);
					this.SendPropertyChanging();
					this._paid = value;
					this.SendPropertyChanged("paid");
					this.OnpaidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_total", DbType="BigInt NOT NULL")]
		public long total
		{
			get
			{
				return this._total;
			}
			set
			{
				if ((this._total != value))
				{
					this.OntotalChanging(value);
					this.SendPropertyChanging();
					this._total = value;
					this.SendPropertyChanged("total");
					this.OntotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="case_master_bill_master", Storage="_case_master", ThisKey="caseid", OtherKey="caseid", IsForeignKey=true)]
		public case_master case_master
		{
			get
			{
				return this._case_master.Entity;
			}
			set
			{
				case_master previousValue = this._case_master.Entity;
				if (((previousValue != value) 
							|| (this._case_master.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._case_master.Entity = null;
						previousValue.bill_masters.Remove(this);
					}
					this._case_master.Entity = value;
					if ((value != null))
					{
						value.bill_masters.Add(this);
						this._caseid = value.caseid;
					}
					else
					{
						this._caseid = default(int);
					}
					this.SendPropertyChanged("case_master");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.case_master")]
	public partial class case_master : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _caseid;
		
		private int _patientid;
		
		private string _ailments;
		
		private System.DateTime _date;
		
		private string _isactive;
		
		private string _chiefcomplaint;
		
		private string _examinationresult;
		
		private System.Nullable<int> _casefee;
		
		private string _reportrequirement;
		
		private string _treatments;
		
		private System.Nullable<System.DateTime> _treatment_date;
		
		private System.Nullable<long> _treatment_fee;
		
		private EntitySet<bill_master> _bill_masters;
		
		private EntitySet<doctor_case> _doctor_cases;
		
		private EntityRef<patient> _patient;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OncaseidChanging(int value);
    partial void OncaseidChanged();
    partial void OnpatientidChanging(int value);
    partial void OnpatientidChanged();
    partial void OnailmentsChanging(string value);
    partial void OnailmentsChanged();
    partial void OndateChanging(System.DateTime value);
    partial void OndateChanged();
    partial void OnisactiveChanging(string value);
    partial void OnisactiveChanged();
    partial void OnchiefcomplaintChanging(string value);
    partial void OnchiefcomplaintChanged();
    partial void OnexaminationresultChanging(string value);
    partial void OnexaminationresultChanged();
    partial void OncasefeeChanging(System.Nullable<int> value);
    partial void OncasefeeChanged();
    partial void OnreportrequirementChanging(string value);
    partial void OnreportrequirementChanged();
    partial void OntreatmentsChanging(string value);
    partial void OntreatmentsChanged();
    partial void Ontreatment_dateChanging(System.Nullable<System.DateTime> value);
    partial void Ontreatment_dateChanged();
    partial void Ontreatment_feeChanging(System.Nullable<long> value);
    partial void Ontreatment_feeChanged();
    #endregion
		
		public case_master()
		{
			this._bill_masters = new EntitySet<bill_master>(new Action<bill_master>(this.attach_bill_masters), new Action<bill_master>(this.detach_bill_masters));
			this._doctor_cases = new EntitySet<doctor_case>(new Action<doctor_case>(this.attach_doctor_cases), new Action<doctor_case>(this.detach_doctor_cases));
			this._patient = default(EntityRef<patient>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_caseid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int caseid
		{
			get
			{
				return this._caseid;
			}
			set
			{
				if ((this._caseid != value))
				{
					this.OncaseidChanging(value);
					this.SendPropertyChanging();
					this._caseid = value;
					this.SendPropertyChanged("caseid");
					this.OncaseidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_patientid", DbType="Int NOT NULL")]
		public int patientid
		{
			get
			{
				return this._patientid;
			}
			set
			{
				if ((this._patientid != value))
				{
					if (this._patient.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnpatientidChanging(value);
					this.SendPropertyChanging();
					this._patientid = value;
					this.SendPropertyChanged("patientid");
					this.OnpatientidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ailments", DbType="VarChar(50)")]
		public string ailments
		{
			get
			{
				return this._ailments;
			}
			set
			{
				if ((this._ailments != value))
				{
					this.OnailmentsChanging(value);
					this.SendPropertyChanging();
					this._ailments = value;
					this.SendPropertyChanged("ailments");
					this.OnailmentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date", DbType="Date NOT NULL")]
		public System.DateTime date
		{
			get
			{
				return this._date;
			}
			set
			{
				if ((this._date != value))
				{
					this.OndateChanging(value);
					this.SendPropertyChanging();
					this._date = value;
					this.SendPropertyChanged("date");
					this.OndateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isactive", DbType="VarChar(7) NOT NULL", CanBeNull=false)]
		public string isactive
		{
			get
			{
				return this._isactive;
			}
			set
			{
				if ((this._isactive != value))
				{
					this.OnisactiveChanging(value);
					this.SendPropertyChanging();
					this._isactive = value;
					this.SendPropertyChanged("isactive");
					this.OnisactiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_chiefcomplaint", DbType="VarChar(256) NOT NULL", CanBeNull=false)]
		public string chiefcomplaint
		{
			get
			{
				return this._chiefcomplaint;
			}
			set
			{
				if ((this._chiefcomplaint != value))
				{
					this.OnchiefcomplaintChanging(value);
					this.SendPropertyChanging();
					this._chiefcomplaint = value;
					this.SendPropertyChanged("chiefcomplaint");
					this.OnchiefcomplaintChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_examinationresult", DbType="VarChar(1000)")]
		public string examinationresult
		{
			get
			{
				return this._examinationresult;
			}
			set
			{
				if ((this._examinationresult != value))
				{
					this.OnexaminationresultChanging(value);
					this.SendPropertyChanging();
					this._examinationresult = value;
					this.SendPropertyChanged("examinationresult");
					this.OnexaminationresultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_casefee", DbType="Int")]
		public System.Nullable<int> casefee
		{
			get
			{
				return this._casefee;
			}
			set
			{
				if ((this._casefee != value))
				{
					this.OncasefeeChanging(value);
					this.SendPropertyChanging();
					this._casefee = value;
					this.SendPropertyChanged("casefee");
					this.OncasefeeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_reportrequirement", DbType="VarChar(1000)")]
		public string reportrequirement
		{
			get
			{
				return this._reportrequirement;
			}
			set
			{
				if ((this._reportrequirement != value))
				{
					this.OnreportrequirementChanging(value);
					this.SendPropertyChanging();
					this._reportrequirement = value;
					this.SendPropertyChanged("reportrequirement");
					this.OnreportrequirementChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_treatments", DbType="VarChar(500)")]
		public string treatments
		{
			get
			{
				return this._treatments;
			}
			set
			{
				if ((this._treatments != value))
				{
					this.OntreatmentsChanging(value);
					this.SendPropertyChanging();
					this._treatments = value;
					this.SendPropertyChanged("treatments");
					this.OntreatmentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[treatment-date]", Storage="_treatment_date", DbType="Date")]
		public System.Nullable<System.DateTime> treatment_date
		{
			get
			{
				return this._treatment_date;
			}
			set
			{
				if ((this._treatment_date != value))
				{
					this.Ontreatment_dateChanging(value);
					this.SendPropertyChanging();
					this._treatment_date = value;
					this.SendPropertyChanged("treatment_date");
					this.Ontreatment_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[treatment-fee]", Storage="_treatment_fee", DbType="BigInt")]
		public System.Nullable<long> treatment_fee
		{
			get
			{
				return this._treatment_fee;
			}
			set
			{
				if ((this._treatment_fee != value))
				{
					this.Ontreatment_feeChanging(value);
					this.SendPropertyChanging();
					this._treatment_fee = value;
					this.SendPropertyChanged("treatment_fee");
					this.Ontreatment_feeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="case_master_bill_master", Storage="_bill_masters", ThisKey="caseid", OtherKey="caseid")]
		public EntitySet<bill_master> bill_masters
		{
			get
			{
				return this._bill_masters;
			}
			set
			{
				this._bill_masters.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="case_master_doctor_case", Storage="_doctor_cases", ThisKey="caseid", OtherKey="caseid")]
		public EntitySet<doctor_case> doctor_cases
		{
			get
			{
				return this._doctor_cases;
			}
			set
			{
				this._doctor_cases.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="patient_case_master", Storage="_patient", ThisKey="patientid", OtherKey="patientid", IsForeignKey=true)]
		public patient patient
		{
			get
			{
				return this._patient.Entity;
			}
			set
			{
				patient previousValue = this._patient.Entity;
				if (((previousValue != value) 
							|| (this._patient.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._patient.Entity = null;
						previousValue.case_masters.Remove(this);
					}
					this._patient.Entity = value;
					if ((value != null))
					{
						value.case_masters.Add(this);
						this._patientid = value.patientid;
					}
					else
					{
						this._patientid = default(int);
					}
					this.SendPropertyChanged("patient");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_bill_masters(bill_master entity)
		{
			this.SendPropertyChanging();
			entity.case_master = this;
		}
		
		private void detach_bill_masters(bill_master entity)
		{
			this.SendPropertyChanging();
			entity.case_master = null;
		}
		
		private void attach_doctor_cases(doctor_case entity)
		{
			this.SendPropertyChanging();
			entity.case_master = this;
		}
		
		private void detach_doctor_cases(doctor_case entity)
		{
			this.SendPropertyChanging();
			entity.case_master = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.doctor")]
	public partial class doctor : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _doctorid;
		
		private string _name;
		
		private string _phoneno;
		
		private string _qualification;
		
		private string _address;
		
		private string _experience;
		
		private string _field;
		
		private long _salary;
		
		private string _email;
		
		private string _password;
		
		private System.DateTime _dob;
		
		private int _age;
		
		private EntitySet<doctor_case> _doctor_cases;
		
		private EntitySet<cheque> _cheques;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OndoctoridChanging(int value);
    partial void OndoctoridChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnphonenoChanging(string value);
    partial void OnphonenoChanged();
    partial void OnqualificationChanging(string value);
    partial void OnqualificationChanged();
    partial void OnaddressChanging(string value);
    partial void OnaddressChanged();
    partial void OnexperienceChanging(string value);
    partial void OnexperienceChanged();
    partial void OnfieldChanging(string value);
    partial void OnfieldChanged();
    partial void OnsalaryChanging(long value);
    partial void OnsalaryChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    partial void OndobChanging(System.DateTime value);
    partial void OndobChanged();
    partial void OnageChanging(int value);
    partial void OnageChanged();
    #endregion
		
		public doctor()
		{
			this._doctor_cases = new EntitySet<doctor_case>(new Action<doctor_case>(this.attach_doctor_cases), new Action<doctor_case>(this.detach_doctor_cases));
			this._cheques = new EntitySet<cheque>(new Action<cheque>(this.attach_cheques), new Action<cheque>(this.detach_cheques));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_doctorid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL", IsPrimaryKey=true, IsDbGenerated=true)]
		public int doctorid
		{
			get
			{
				return this._doctorid;
			}
			set
			{
				if ((this._doctorid != value))
				{
					this.OndoctoridChanging(value);
					this.SendPropertyChanging();
					this._doctorid = value;
					this.SendPropertyChanged("doctorid");
					this.OndoctoridChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phoneno", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string phoneno
		{
			get
			{
				return this._phoneno;
			}
			set
			{
				if ((this._phoneno != value))
				{
					this.OnphonenoChanging(value);
					this.SendPropertyChanging();
					this._phoneno = value;
					this.SendPropertyChanged("phoneno");
					this.OnphonenoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_qualification", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string qualification
		{
			get
			{
				return this._qualification;
			}
			set
			{
				if ((this._qualification != value))
				{
					this.OnqualificationChanging(value);
					this.SendPropertyChanging();
					this._qualification = value;
					this.SendPropertyChanged("qualification");
					this.OnqualificationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_address", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string address
		{
			get
			{
				return this._address;
			}
			set
			{
				if ((this._address != value))
				{
					this.OnaddressChanging(value);
					this.SendPropertyChanging();
					this._address = value;
					this.SendPropertyChanged("address");
					this.OnaddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_experience", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string experience
		{
			get
			{
				return this._experience;
			}
			set
			{
				if ((this._experience != value))
				{
					this.OnexperienceChanging(value);
					this.SendPropertyChanging();
					this._experience = value;
					this.SendPropertyChanged("experience");
					this.OnexperienceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_field", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string field
		{
			get
			{
				return this._field;
			}
			set
			{
				if ((this._field != value))
				{
					this.OnfieldChanging(value);
					this.SendPropertyChanging();
					this._field = value;
					this.SendPropertyChanged("field");
					this.OnfieldChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_salary", DbType="BigInt NOT NULL")]
		public long salary
		{
			get
			{
				return this._salary;
			}
			set
			{
				if ((this._salary != value))
				{
					this.OnsalaryChanging(value);
					this.SendPropertyChanging();
					this._salary = value;
					this.SendPropertyChanged("salary");
					this.OnsalaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dob", DbType="Date NOT NULL")]
		public System.DateTime dob
		{
			get
			{
				return this._dob;
			}
			set
			{
				if ((this._dob != value))
				{
					this.OndobChanging(value);
					this.SendPropertyChanging();
					this._dob = value;
					this.SendPropertyChanged("dob");
					this.OndobChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_age", DbType="Int NOT NULL")]
		public int age
		{
			get
			{
				return this._age;
			}
			set
			{
				if ((this._age != value))
				{
					this.OnageChanging(value);
					this.SendPropertyChanging();
					this._age = value;
					this.SendPropertyChanged("age");
					this.OnageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="doctor_doctor_case", Storage="_doctor_cases", ThisKey="doctorid", OtherKey="doctorid")]
		public EntitySet<doctor_case> doctor_cases
		{
			get
			{
				return this._doctor_cases;
			}
			set
			{
				this._doctor_cases.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="doctor_cheque", Storage="_cheques", ThisKey="doctorid", OtherKey="doctorid")]
		public EntitySet<cheque> cheques
		{
			get
			{
				return this._cheques;
			}
			set
			{
				this._cheques.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_doctor_cases(doctor_case entity)
		{
			this.SendPropertyChanging();
			entity.doctor = this;
		}
		
		private void detach_doctor_cases(doctor_case entity)
		{
			this.SendPropertyChanging();
			entity.doctor = null;
		}
		
		private void attach_cheques(cheque entity)
		{
			this.SendPropertyChanging();
			entity.doctor = this;
		}
		
		private void detach_cheques(cheque entity)
		{
			this.SendPropertyChanging();
			entity.doctor = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.item")]
	public partial class item : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _itemid;
		
		private string _name;
		
		private int _cost_per_item;
		
		private EntitySet<bill_item> _bill_items;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnitemidChanging(int value);
    partial void OnitemidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void Oncost_per_itemChanging(int value);
    partial void Oncost_per_itemChanged();
    #endregion
		
		public item()
		{
			this._bill_items = new EntitySet<bill_item>(new Action<bill_item>(this.attach_bill_items), new Action<bill_item>(this.detach_bill_items));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_itemid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int itemid
		{
			get
			{
				return this._itemid;
			}
			set
			{
				if ((this._itemid != value))
				{
					this.OnitemidChanging(value);
					this.SendPropertyChanging();
					this._itemid = value;
					this.SendPropertyChanged("itemid");
					this.OnitemidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cost_per_item", DbType="Int NOT NULL")]
		public int cost_per_item
		{
			get
			{
				return this._cost_per_item;
			}
			set
			{
				if ((this._cost_per_item != value))
				{
					this.Oncost_per_itemChanging(value);
					this.SendPropertyChanging();
					this._cost_per_item = value;
					this.SendPropertyChanged("cost_per_item");
					this.Oncost_per_itemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="item_bill_item", Storage="_bill_items", ThisKey="itemid", OtherKey="itemid")]
		public EntitySet<bill_item> bill_items
		{
			get
			{
				return this._bill_items;
			}
			set
			{
				this._bill_items.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_bill_items(bill_item entity)
		{
			this.SendPropertyChanging();
			entity.item = this;
		}
		
		private void detach_bill_items(bill_item entity)
		{
			this.SendPropertyChanging();
			entity.item = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.doctor_case")]
	public partial class doctor_case : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _doctorid;
		
		private int _caseid;
		
		private EntityRef<case_master> _case_master;
		
		private EntityRef<doctor> _doctor;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OndoctoridChanging(int value);
    partial void OndoctoridChanged();
    partial void OncaseidChanging(int value);
    partial void OncaseidChanged();
    #endregion
		
		public doctor_case()
		{
			this._case_master = default(EntityRef<case_master>);
			this._doctor = default(EntityRef<doctor>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_doctorid", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int doctorid
		{
			get
			{
				return this._doctorid;
			}
			set
			{
				if ((this._doctorid != value))
				{
					if (this._doctor.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OndoctoridChanging(value);
					this.SendPropertyChanging();
					this._doctorid = value;
					this.SendPropertyChanged("doctorid");
					this.OndoctoridChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_caseid", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int caseid
		{
			get
			{
				return this._caseid;
			}
			set
			{
				if ((this._caseid != value))
				{
					if (this._case_master.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncaseidChanging(value);
					this.SendPropertyChanging();
					this._caseid = value;
					this.SendPropertyChanged("caseid");
					this.OncaseidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="case_master_doctor_case", Storage="_case_master", ThisKey="caseid", OtherKey="caseid", IsForeignKey=true)]
		public case_master case_master
		{
			get
			{
				return this._case_master.Entity;
			}
			set
			{
				case_master previousValue = this._case_master.Entity;
				if (((previousValue != value) 
							|| (this._case_master.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._case_master.Entity = null;
						previousValue.doctor_cases.Remove(this);
					}
					this._case_master.Entity = value;
					if ((value != null))
					{
						value.doctor_cases.Add(this);
						this._caseid = value.caseid;
					}
					else
					{
						this._caseid = default(int);
					}
					this.SendPropertyChanged("case_master");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="doctor_doctor_case", Storage="_doctor", ThisKey="doctorid", OtherKey="doctorid", IsForeignKey=true)]
		public doctor doctor
		{
			get
			{
				return this._doctor.Entity;
			}
			set
			{
				doctor previousValue = this._doctor.Entity;
				if (((previousValue != value) 
							|| (this._doctor.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._doctor.Entity = null;
						previousValue.doctor_cases.Remove(this);
					}
					this._doctor.Entity = value;
					if ((value != null))
					{
						value.doctor_cases.Add(this);
						this._doctorid = value.doctorid;
					}
					else
					{
						this._doctorid = default(int);
					}
					this.SendPropertyChanged("doctor");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.room_master")]
	public partial class room_master : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _roomid;
		
		private System.Nullable<int> _patientid;
		
		private string _roomtype;
		
		private int _roomcost;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnroomidChanging(int value);
    partial void OnroomidChanged();
    partial void OnpatientidChanging(System.Nullable<int> value);
    partial void OnpatientidChanged();
    partial void OnroomtypeChanging(string value);
    partial void OnroomtypeChanged();
    partial void OnroomcostChanging(int value);
    partial void OnroomcostChanged();
    #endregion
		
		public room_master()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_roomid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int roomid
		{
			get
			{
				return this._roomid;
			}
			set
			{
				if ((this._roomid != value))
				{
					this.OnroomidChanging(value);
					this.SendPropertyChanging();
					this._roomid = value;
					this.SendPropertyChanged("roomid");
					this.OnroomidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_patientid", DbType="Int")]
		public System.Nullable<int> patientid
		{
			get
			{
				return this._patientid;
			}
			set
			{
				if ((this._patientid != value))
				{
					this.OnpatientidChanging(value);
					this.SendPropertyChanging();
					this._patientid = value;
					this.SendPropertyChanged("patientid");
					this.OnpatientidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_roomtype", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string roomtype
		{
			get
			{
				return this._roomtype;
			}
			set
			{
				if ((this._roomtype != value))
				{
					this.OnroomtypeChanging(value);
					this.SendPropertyChanging();
					this._roomtype = value;
					this.SendPropertyChanged("roomtype");
					this.OnroomtypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_roomcost", DbType="Int NOT NULL")]
		public int roomcost
		{
			get
			{
				return this._roomcost;
			}
			set
			{
				if ((this._roomcost != value))
				{
					this.OnroomcostChanging(value);
					this.SendPropertyChanging();
					this._roomcost = value;
					this.SendPropertyChanged("roomcost");
					this.OnroomcostChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PresentBalance")]
	public partial class PresentBalance : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _ident;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnidentChanging(string value);
    partial void OnidentChanged();
    #endregion
		
		public PresentBalance()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL")]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ident", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ident
		{
			get
			{
				return this._ident;
			}
			set
			{
				if ((this._ident != value))
				{
					this.OnidentChanging(value);
					this.SendPropertyChanging();
					this._ident = value;
					this.SendPropertyChanged("ident");
					this.OnidentChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.cost")]
	public partial class cost : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.DateTime _date;
		
		private long _starting_balance;
		
		private System.Nullable<int> _billid;
		
		private System.Nullable<int> _chequeid;
		
		private long _final_balance;
		
		private int _CostId;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OndateChanging(System.DateTime value);
    partial void OndateChanged();
    partial void Onstarting_balanceChanging(long value);
    partial void Onstarting_balanceChanged();
    partial void OnbillidChanging(System.Nullable<int> value);
    partial void OnbillidChanged();
    partial void OnchequeidChanging(System.Nullable<int> value);
    partial void OnchequeidChanged();
    partial void Onfinal_balanceChanging(long value);
    partial void Onfinal_balanceChanged();
    partial void OnCostIdChanging(int value);
    partial void OnCostIdChanged();
    #endregion
		
		public cost()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date", DbType="DateTime2 NOT NULL")]
		public System.DateTime date
		{
			get
			{
				return this._date;
			}
			set
			{
				if ((this._date != value))
				{
					this.OndateChanging(value);
					this.SendPropertyChanging();
					this._date = value;
					this.SendPropertyChanged("date");
					this.OndateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_starting_balance", DbType="BigInt NOT NULL")]
		public long starting_balance
		{
			get
			{
				return this._starting_balance;
			}
			set
			{
				if ((this._starting_balance != value))
				{
					this.Onstarting_balanceChanging(value);
					this.SendPropertyChanging();
					this._starting_balance = value;
					this.SendPropertyChanged("starting_balance");
					this.Onstarting_balanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_billid", DbType="Int")]
		public System.Nullable<int> billid
		{
			get
			{
				return this._billid;
			}
			set
			{
				if ((this._billid != value))
				{
					this.OnbillidChanging(value);
					this.SendPropertyChanging();
					this._billid = value;
					this.SendPropertyChanged("billid");
					this.OnbillidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_chequeid", DbType="Int")]
		public System.Nullable<int> chequeid
		{
			get
			{
				return this._chequeid;
			}
			set
			{
				if ((this._chequeid != value))
				{
					this.OnchequeidChanging(value);
					this.SendPropertyChanging();
					this._chequeid = value;
					this.SendPropertyChanged("chequeid");
					this.OnchequeidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_final_balance", DbType="BigInt NOT NULL")]
		public long final_balance
		{
			get
			{
				return this._final_balance;
			}
			set
			{
				if ((this._final_balance != value))
				{
					this.Onfinal_balanceChanging(value);
					this.SendPropertyChanging();
					this._final_balance = value;
					this.SendPropertyChanged("final_balance");
					this.Onfinal_balanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CostId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CostId
		{
			get
			{
				return this._CostId;
			}
			set
			{
				if ((this._CostId != value))
				{
					this.OnCostIdChanging(value);
					this.SendPropertyChanging();
					this._CostId = value;
					this.SendPropertyChanged("CostId");
					this.OnCostIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.patient")]
	public partial class patient : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _patientid;
		
		private string _email;
		
		private string _password;
		
		private string _fname;
		
		private string _mname;
		
		private string _lname;
		
		private System.DateTime _dob;
		
		private string _age;
		
		private string _phoneno;
		
		private string _address;
		
		private string _gender;
		
		private string _bloodgroup;
		
		private string _maritalstatus;
		
		private string _pictureurl;
		
		private string _occupation;
		
		private EntitySet<case_master> _case_masters;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnpatientidChanging(int value);
    partial void OnpatientidChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    partial void OnfnameChanging(string value);
    partial void OnfnameChanged();
    partial void OnmnameChanging(string value);
    partial void OnmnameChanged();
    partial void OnlnameChanging(string value);
    partial void OnlnameChanged();
    partial void OndobChanging(System.DateTime value);
    partial void OndobChanged();
    partial void OnageChanging(string value);
    partial void OnageChanged();
    partial void OnphonenoChanging(string value);
    partial void OnphonenoChanged();
    partial void OnaddressChanging(string value);
    partial void OnaddressChanged();
    partial void OngenderChanging(string value);
    partial void OngenderChanged();
    partial void OnbloodgroupChanging(string value);
    partial void OnbloodgroupChanged();
    partial void OnmaritalstatusChanging(string value);
    partial void OnmaritalstatusChanged();
    partial void OnpictureurlChanging(string value);
    partial void OnpictureurlChanged();
    partial void OnoccupationChanging(string value);
    partial void OnoccupationChanged();
    #endregion
		
		public patient()
		{
			this._case_masters = new EntitySet<case_master>(new Action<case_master>(this.attach_case_masters), new Action<case_master>(this.detach_case_masters));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_patientid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int patientid
		{
			get
			{
				return this._patientid;
			}
			set
			{
				if ((this._patientid != value))
				{
					this.OnpatientidChanging(value);
					this.SendPropertyChanging();
					this._patientid = value;
					this.SendPropertyChanged("patientid");
					this.OnpatientidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fname", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string fname
		{
			get
			{
				return this._fname;
			}
			set
			{
				if ((this._fname != value))
				{
					this.OnfnameChanging(value);
					this.SendPropertyChanging();
					this._fname = value;
					this.SendPropertyChanged("fname");
					this.OnfnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mname", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string mname
		{
			get
			{
				return this._mname;
			}
			set
			{
				if ((this._mname != value))
				{
					this.OnmnameChanging(value);
					this.SendPropertyChanging();
					this._mname = value;
					this.SendPropertyChanged("mname");
					this.OnmnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lname", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string lname
		{
			get
			{
				return this._lname;
			}
			set
			{
				if ((this._lname != value))
				{
					this.OnlnameChanging(value);
					this.SendPropertyChanging();
					this._lname = value;
					this.SendPropertyChanged("lname");
					this.OnlnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dob", DbType="Date NOT NULL")]
		public System.DateTime dob
		{
			get
			{
				return this._dob;
			}
			set
			{
				if ((this._dob != value))
				{
					this.OndobChanging(value);
					this.SendPropertyChanging();
					this._dob = value;
					this.SendPropertyChanged("dob");
					this.OndobChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_age", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string age
		{
			get
			{
				return this._age;
			}
			set
			{
				if ((this._age != value))
				{
					this.OnageChanging(value);
					this.SendPropertyChanging();
					this._age = value;
					this.SendPropertyChanged("age");
					this.OnageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phoneno", DbType="VarChar(15) NOT NULL", CanBeNull=false)]
		public string phoneno
		{
			get
			{
				return this._phoneno;
			}
			set
			{
				if ((this._phoneno != value))
				{
					this.OnphonenoChanging(value);
					this.SendPropertyChanging();
					this._phoneno = value;
					this.SendPropertyChanged("phoneno");
					this.OnphonenoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_address", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string address
		{
			get
			{
				return this._address;
			}
			set
			{
				if ((this._address != value))
				{
					this.OnaddressChanging(value);
					this.SendPropertyChanging();
					this._address = value;
					this.SendPropertyChanged("address");
					this.OnaddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gender", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string gender
		{
			get
			{
				return this._gender;
			}
			set
			{
				if ((this._gender != value))
				{
					this.OngenderChanging(value);
					this.SendPropertyChanging();
					this._gender = value;
					this.SendPropertyChanged("gender");
					this.OngenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bloodgroup", DbType="VarChar(5) NOT NULL", CanBeNull=false)]
		public string bloodgroup
		{
			get
			{
				return this._bloodgroup;
			}
			set
			{
				if ((this._bloodgroup != value))
				{
					this.OnbloodgroupChanging(value);
					this.SendPropertyChanging();
					this._bloodgroup = value;
					this.SendPropertyChanged("bloodgroup");
					this.OnbloodgroupChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maritalstatus", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string maritalstatus
		{
			get
			{
				return this._maritalstatus;
			}
			set
			{
				if ((this._maritalstatus != value))
				{
					this.OnmaritalstatusChanging(value);
					this.SendPropertyChanging();
					this._maritalstatus = value;
					this.SendPropertyChanged("maritalstatus");
					this.OnmaritalstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pictureurl", DbType="VarChar(1000) NOT NULL", CanBeNull=false)]
		public string pictureurl
		{
			get
			{
				return this._pictureurl;
			}
			set
			{
				if ((this._pictureurl != value))
				{
					this.OnpictureurlChanging(value);
					this.SendPropertyChanging();
					this._pictureurl = value;
					this.SendPropertyChanged("pictureurl");
					this.OnpictureurlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_occupation", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string occupation
		{
			get
			{
				return this._occupation;
			}
			set
			{
				if ((this._occupation != value))
				{
					this.OnoccupationChanging(value);
					this.SendPropertyChanging();
					this._occupation = value;
					this.SendPropertyChanged("occupation");
					this.OnoccupationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="patient_case_master", Storage="_case_masters", ThisKey="patientid", OtherKey="patientid")]
		public EntitySet<case_master> case_masters
		{
			get
			{
				return this._case_masters;
			}
			set
			{
				this._case_masters.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_case_masters(case_master entity)
		{
			this.SendPropertyChanging();
			entity.patient = this;
		}
		
		private void detach_case_masters(case_master entity)
		{
			this.SendPropertyChanging();
			entity.patient = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.cheque")]
	public partial class cheque : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _chequeid;
		
		private int _doctorid;
		
		private System.DateTime _date;
		
		private long _amount;
		
		private EntityRef<doctor> _doctor;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnchequeidChanging(int value);
    partial void OnchequeidChanged();
    partial void OndoctoridChanging(int value);
    partial void OndoctoridChanged();
    partial void OndateChanging(System.DateTime value);
    partial void OndateChanged();
    partial void OnamountChanging(long value);
    partial void OnamountChanged();
    #endregion
		
		public cheque()
		{
			this._doctor = default(EntityRef<doctor>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_chequeid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int chequeid
		{
			get
			{
				return this._chequeid;
			}
			set
			{
				if ((this._chequeid != value))
				{
					this.OnchequeidChanging(value);
					this.SendPropertyChanging();
					this._chequeid = value;
					this.SendPropertyChanged("chequeid");
					this.OnchequeidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_doctorid", DbType="Int NOT NULL")]
		public int doctorid
		{
			get
			{
				return this._doctorid;
			}
			set
			{
				if ((this._doctorid != value))
				{
					if (this._doctor.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OndoctoridChanging(value);
					this.SendPropertyChanging();
					this._doctorid = value;
					this.SendPropertyChanged("doctorid");
					this.OndoctoridChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date", DbType="DateTime2 NOT NULL")]
		public System.DateTime date
		{
			get
			{
				return this._date;
			}
			set
			{
				if ((this._date != value))
				{
					this.OndateChanging(value);
					this.SendPropertyChanging();
					this._date = value;
					this.SendPropertyChanged("date");
					this.OndateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_amount", DbType="BigInt NOT NULL")]
		public long amount
		{
			get
			{
				return this._amount;
			}
			set
			{
				if ((this._amount != value))
				{
					this.OnamountChanging(value);
					this.SendPropertyChanging();
					this._amount = value;
					this.SendPropertyChanged("amount");
					this.OnamountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="doctor_cheque", Storage="_doctor", ThisKey="doctorid", OtherKey="doctorid", IsForeignKey=true)]
		public doctor doctor
		{
			get
			{
				return this._doctor.Entity;
			}
			set
			{
				doctor previousValue = this._doctor.Entity;
				if (((previousValue != value) 
							|| (this._doctor.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._doctor.Entity = null;
						previousValue.cheques.Remove(this);
					}
					this._doctor.Entity = value;
					if ((value != null))
					{
						value.cheques.Add(this);
						this._doctorid = value.doctorid;
					}
					else
					{
						this._doctorid = default(int);
					}
					this.SendPropertyChanged("doctor");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
